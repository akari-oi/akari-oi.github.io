{"config":{"lang":["ja"],"separator":"[\\s\\-\uff0c\u3002]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"HomePage","text":"<p>This is my home page.</p>"},{"location":"algo/morris/","title":"Morris Traversal","text":"<p>Problem Link: ACMOJ1826</p>"},{"location":"algo/morris/#background","title":"Background","text":"<p>\u904d\u5386\u4e00\u68f5 \u4e8c\u53c9 \u6811\uff1f\u90a3\u5fc5\u7136\u662f <code>DFS</code> \u554a\uff0c\u597d\u5199\u53c8\u5feb\uff0c\u5c31\u7b97\u8003\u8651\u5230\u9012\u5f52\u5c42\u6570\u592a\u591a\u7206\u6808\uff0c\u5199 <code>BFS</code> \u5c31\u597d\u4e86\u554a\u3002</p> <p>\u4f46\u662f\uff0c\u5982\u679c\u53ea\u7528 \\(O(1)\\) \u7684\u989d\u5916\u7a7a\u95f4\u5462\uff1fDFS \u7684\u8bdd\u53ef\u80fd\u8981\u7528 \\(O(N)\\) \u7684\u7a7a\u95f4\u8bf6\uff08\u5f53\u6811\u9000\u5316\u6210\u4e00\u6761\u94fe\u7684\u65f6\u5019\uff09\u3002</p> <p>for i = 1 to n</p> <p>\uff08\u6ce8\u610f\u4e0b\uff0c\u4e0d\u8981\u641e\uff0c\u4e5f\u6ca1\u5fc5\u8981\u641e\u4e00\u4e9b\u5c0f\u806a\u660e\uff0c\u6bd4\u5982\u8bf4\u628a\u8fb9\u53d6\u8d1f\u6765\u6807\u8bb0\u8fd9\u6761\u8fb9\u6709\u6ca1\u6709\u8bbf\u95ee\u8fc7\u8fd9\u4e9b\uff0c\u5b8c\u5168\u6ca1\u5fc5\u8981\u554a\uff09</p> <p>\u8fd9\u65f6\u5019\uff0cMorris Traversal \u5c31\u53ef\u4ee5\u4e0d\u7528\u9012\u5f52\u3001\u4e0d\u7528\u6808/\u961f\u5217\u3001\u53ea\u7528 \\(O(1)\\) \u989d\u5916\u7a7a\u95f4\u904d\u5386\u4e00\u68f5\u6811\u3002</p> <p>Morris' tree traversal algorithm reconsidered</p>"},{"location":"algo/morris/#morris-traversal_1","title":"Morris Traversal","text":"<p>\u6211\u4eec\u5148\u6765\u8bb2\u8ff0\u4e00\u4e0b\u7b97\u6cd5\u7684\u6d41\u7a0b\u3002</p> <ol> <li>\u5f53\u524d\u7ed3\u70b9\u4e3a \\(u\\)\uff0c\u7b97\u6cd5\u6700\u5f00\u59cb\u65f6\u8bbe\u4e3a\u6839\u7ed3\u70b9\u3002</li> <li>\u5982\u679c \\(u\\) \u6ca1\u6709\u5de6\u513f\u5b50\uff0c\u5c06 \\(u\\) \u8bbe\u4e3a\u5b83\u7684\u53f3\u513f\u5b50\uff0c\u56de\u5230\u6b65\u9aa4 1\u3002</li> <li>\u627e\u5230 \\(u\\) \u5de6\u5b50\u6811\u4e2d\u6700\u201c\u53f3\u201d\u7684\u7ed3\u70b9 \\(v\\)\uff08\u6700\u53f3\u7684\u7ed3\u70b9\u6307\u7684\u662f\u4e2d\u5e8f\u904d\u5386\u6700\u540e\u904d\u5386\u5230\u7684\u7ed3\u70b9\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ece \\(u\\) \u7684\u5de6\u513f\u5b50\u4e0d\u65ad\u5f80\u53f3\u627e\u5230\uff09\u3002</li> <li>\u5982\u679c \\(v\\) \u6ca1\u6709\u53f3\u513f\u5b50\uff0c\u90a3\u4e48\u5c06 \\(v\\) \u7684\u53f3\u513f\u5b50\u8bbe\u4e3a \\(u\\)\uff0c\u7136\u540e\u628a \\(u\\) \u8bbe\u4e3a \\(u\\) \u7684\u5de6\u513f\u5b50\uff0c\u56de\u5230\u6b65\u9aa4 1\u3002</li> <li>\u5982\u679c \\(v\\) \u7684\u53f3\u513f\u5b50\u662f \\(u\\)\uff0c\u5c06 \\(v\\) \u7684\u53f3\u513f\u5b50\u6539\u56de\u7a7a\uff0c\u7136\u540e\u628a \\(u\\) \u8bbe\u4e3a \\(u\\) \u7684\u53f3\u513f\u5b50\uff0c\u56de\u5230\u6b65\u9aa41\u3002\uff08\u6ce8\uff1a\\(v\\) \u7684\u53f3\u5b50\u6811\u53ea\u6709\u53ef\u80fd\u662f\u8fd9\u4e24\u79cd\u60c5\u51b5\uff09</li> </ol> <p>\u8fd9\u4e2a\u7b97\u6cd5\u4e3a\u4ec0\u4e48\u662f\u6b63\u786e\u7684\u5462\uff1f</p> <p>\u5f53\u524d\u6211\u4eec\u5728 \\(u\\)\uff0c\u6211\u4eec\u5c06\u4f1a\u628a\u5de6\u5b50\u6811\u904d\u5386\u4e00\u904d\uff0c\u7136\u540e\u7ee7\u7eed\u904d\u5386\u53f3\u5b50\u6811\u3002\u5de6\u5b50\u6811\u4e2d\u7684\u6700\u53f3\u7ed3\u70b9 \\(v\\) \u672c\u6765\u662f\u6ca1\u6709\u53f3\u513f\u5b50\u7684\uff0c\u6211\u4eec\u628a\u5b83\u7684\u53f3\u513f\u5b50\u8bbe\u4e3a \\(u\\)\uff0c\u8fd9\u6837\uff0c\u5728\u904d\u5386\u5b8c\u5de6\u5b50\u6811\u5230\u8fbe\u6700\u540e\uff08\u4e2d\u5e8f\uff09\u904d\u5386\u5230\u7684\u7ed3\u70b9 \\(v\\) \u7684\u65f6\u5019\uff0c\u7531\u4e8e \\(v\\) \u7684\u53f3\u513f\u5b50\u662f\u975e\u7a7a\u7684\uff0c\u6211\u4eec\u5c06\u4f1a\u7ee7\u7eed\u904d\u5386 \\(v\\) \u7684\u53f3\u513f\u5b50\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u5374\u56de\u5230\u4e86\u7ed3\u70b9 \\(u\\)\uff0c\u7136\u540e\u518d\u627e\u5de6\u5b50\u6811\u4e2d\u6700\u53f3\u8282\u70b9\u5c31\u53ef\u4ee5\u53d1\u73b0\u5b83\u7684\u53f3\u513f\u5b50\u5df2\u7ecf\u8bbe\u4e3a \\(u\\)\uff0c\u8bf4\u660e \\(u\\) \u5b9e\u9645\u4e0a\u5e76\u4e0d\u662f \\(v\\) \u7684\u53f3\u5b50\u6811\uff0c\u5e76\u4e14 \\(u\\) \u7684\u5de6\u5b50\u6811\u5df2\u7ecf\u904d\u5386\u5b8c\u4e86\uff0c\u53ef\u4ee5\u5f00\u59cb\u904d\u5386\u53f3\u5b50\u6811\u4e86\uff0c\u4e8e\u662f\u628a \\(u\\) \u8bbe\u4e3a\u5b83\u7684\u53f3\u513f\u5b50\u7136\u540e\u7ee7\u7eed\u904d\u5386\u3002</p> <p></p> acmoj1826.cpp<pre><code>#include &lt;iostream&gt;\n#define N 1000\nusing namespace std;\nstruct tree {\nint left;\nint right;\nint v;\n} ts[N];\nint sum() {\nint x = 0, s = 0;\nwhile( x != -1 ){\nif ( ts[x].left == -1 ){\ns += ts[x].v; // \u6ca1\u6709\u5de6\u5b50\u6811\uff0c\u76f4\u63a5\u8d70\u53f3\u7ed3\u70b9\nx = ts[x].right;\n} else {\nint y = ts[x].left;\nwhile( ts[y].right != -1 &amp;&amp; ts[y].right != x ) // \u627e\u5230\u5de6\u5b50\u6811\u7684\u6700\u53f3\u7ed3\u70b9\ny = ts[y].right;\nif ( ts[y].right == -1 ){ // \u5de6\u5b50\u6811\u8fd8\u6ca1\u6709\u904d\u5386\u8fc7\ns += ts[x].v;\nts[y].right = x;\nx = ts[x].left; } else { // \u5de6\u5b50\u6811\u5df2\u7ecf\u904d\u5386\u5b8c\u4e86\nts[y].right = -1;\nx = ts[x].right;\n}\n}\nreturn s;\n}\nint main() {\nint n;\ncin &gt;&gt; n;\nfor (int i = 0; i &lt; n; i++) {\ncin &gt;&gt; ts[i].left;\ncin &gt;&gt; ts[i].right;\ncin &gt;&gt; ts[i].v;\n}\ncout &lt;&lt; sum();\n}\n</code></pre> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u73b0\u5728\u7684\u904d\u5386\u987a\u5e8f\u662f\u524d\u5e8f\u904d\u5386\u3002\u53ea\u8981\u7a0d\u52a0\u4fee\u6539\uff0c\u5c31\u53ef\u4ee5\u53d8\u6210\u4e2d\u5e8f\u904d\u5386\u3002</p> <p>\u90a3\u4e48\uff0c\u95ee\u9898\u6765\u4e86\uff0c\u600e\u6837\u7528 \\(O(1)\\) \u989d\u5916\u7a7a\u95f4\u5b9e\u73b0\u540e\u5e8f\u904d\u5386\uff1f\u6700\u4f73\u56de\u7b54\uff1a\u6211\u4e0d\u77e5\u9053\u3002</p>"},{"location":"comb/","title":"This is comb","text":""},{"location":"crypto/","title":"\u5bc6\u7801\u5b66","text":"<p>\u7a0d\u5fae\u5b66\u4e86\u4e00\u70b9\u5bc6\u7801\u5b66 <code>_(:\u0437\u300d\u2220)_</code></p>"},{"location":"crypto/lattice/","title":"\u7b80\u4ecb","text":"<p>\u53c2\u8003\u8d44\u6599 EECS 598 Lectures</p>"},{"location":"crypto/lattice/#_2","title":"\u4ec0\u4e48\u662f\u7f51\u683c\uff1f","text":"<p>Definition\uff08Lattice\uff09 \u4e00\u4e2a \\(n\\) \u7ef4\u7684\u7f51\u683c \\(\\mathcal{L}\\) \u662f \\(\\mathbb{R}^n\\) \u7684\u4e00\u4e2a\u79bb\u6563\u7684\u52a0\u6cd5\u5b50\u7fa4.</p>"},{"location":"crypto/lattice/#_3","title":"\u7f51\u683c\u7684\u4e00\u4e9b\u6027\u8d28","text":"<p>Theorem\uff08Minkowski\uff09 \u4ee4\u7f51\u683c \\(\\mathcal{L}\\in\\mathbb R^n\\)\uff0c\u5bf9\u4e8e\u51f8\u7684\u3001\u4e2d\u5fc3\u5bf9\u79f0\u7684\u56fe\u5f62 \\(S\\)\uff0c\u82e5\u5b83\u7684\u4f53\u79ef \\(\\text{vol}(S)&gt; 2^n\\det(\\mathcal{L})\\)\uff0c\u5219 \\(S\\) \u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u975e\u96f6\u7f51\u683c\u70b9\uff0c\u5373 \\(S\\cup\\mathcal{L}\\neq\\{0\\}\\).</p> <p>Corollary\uff08Minkowski's First Theorem\uff09 \u5bf9\u4e8e\u4efb\u4f55\u7f51\u683c \\(\\mathcal{L}\\)\uff0c\u90fd\u6709 \\(\\lambda_1(\\mathcal L)\\leq\\sqrt{n}\\det(\\mathcal L)^{\\frac1n}\\).</p>"},{"location":"crypto/lattice/#svp-shortest-vector-problem","title":"SVP \u95ee\u9898\uff08Shortest Vector Problem\uff09","text":"<p>\u5b9a\u4e49\uff08SVP\u95ee\u9898\uff09 \u4e0d\u5931\u4e00\u822c\u6027\u5730\uff0c\u6211\u4eec\u53ea\u8ba8\u8bba\u6574\u6570\u7f51\u683c\uff08\u867d\u7136\u6211\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4e0d\u5931\u4e00\u822c\u6027\uff09\u3002SVP\u95ee\u9898\u6709\u4e09\u79cd\u5f62\u5f0f\uff1a</p> <ul> <li>Decision \u7ed9\u5b9a\u7f51\u683c\u57fa \\(B\\) \u548c\u4e00\u4e2a\u5b9e\u6570 \\(d\\)\uff0c\u5224\u65ad \\(\\lambda_1(\\mathcal{L}(B))\\leq d\\) \u8fd8\u662f \\(\\lambda_1(\\mathcal{L}(B))&gt;d\\).</li> <li>Calculation \u7ed9\u5b9a\u7f51\u683c\u57fa \\(B\\)\uff0c\u8ba1\u7b97 \\(\\lambda_1(\\mathcal{L}(B))\\).</li> <li>Search \u7ed9\u5b9a\u7f51\u683c\u57fa \\(B\\)\uff0c\u627e\u5230\u4e00\u4e2a \\(v\\in\\mathcal{L}(B)\\) \u4f7f\u5f97 \\(||v||=\\lambda_1(\\mathcal{L}(B))\\).</li> </ul> <p>\u5bb9\u6613\u770b\u5230 Decision \\(\\leq\\) Calculation \\(\\leq\\) Search.\uff08\u8fd9\u91cc \\(\\leq\\) \u8868\u793a\u5f52\u7ea6\uff09</p> <p>Calculation \u53ef\u4ee5\u901a\u8fc7 Decision + \u4e8c\u5206\u67e5\u627e\u5f97\u5230\uff0c\u56e0\u6b64 Calculation \\(\\leq\\) Decision.\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\\((\\lambda_1(\\mathcal{L}(B)))^2\\) \u662f\u4e00\u4e2a\u6574\u6570\uff0c\u800c\u7531<code>Minkowski\u2019s First Theorem</code>\uff0c\\(\\lambda_1(\\mathcal{L}(B))&lt;\\sqrt{n}\\det(\\mathcal{L(B)})^{\\frac1n}=2^{\\text{poly}(|B|)}\\)\uff0c\u56e0\u6b64\u8fd9\u4e2a\u5f52\u7ea6\u662f\u6210\u7acb\u7684.</p> <p>\u4e8b\u5b9e\u4e0a\u540c\u6837\u6709 Search \\(\\leq\\) Calculation\uff08\u73b0\u5728\u5148\u4e0d\u8ba8\u8bba\uff09\uff0c\u56e0\u6b64\u4e09\u4e2a\u95ee\u9898\u662f\u7b49\u4ef7\u7684.</p>"},{"location":"crypto/lattice/coppersmith/","title":"Coppersmith \u6cd5","text":""},{"location":"crypto/lattice/lll/","title":"LLL \u7b97\u6cd5","text":""}]}